openapi: 3.0.0
info:
  description: |-
    The Access token API is for requesting an access token, which is a JWT (JSON Web Token).

    There are two endpoints:

    1. `POST:/accesstoken/get`: Used by most APIs, and has been in use for several years.
    2. `POST:/miami/v1/token`: Used by some new APIs and roles, from 2023.

    For `POST:/accesstoken/get`:
    The access token must be provided in all API requests, together with the subscription key.
    The access token is valid for 1 hour in the test environment and
    24 hours in the production environment.

    For `POST:/miami/v1/token`:
    The access token must be provided in all API requests (no subscription key needed).
    The access token is valid for 15 minutes in both the test environment and the production environment.

    See the [API Guide](/docs/APIs/access-token-api) for more details.
  title: Access token
  version: 2.0.0
servers:
- description: "Production environment (uses the production API keys, the official\
    \ app and live data)"
  url: https://api.vipps.no
- description: "Test environment (uses the test API keys, the test app and test data)"
  url: https://apitest.vipps.no
tags:
- description: The primary authorization service for Vipps MobilePay APIs.
  name: Authorization Service
- description: A token authorization for partners in certain roles.
  name: Token endpoint
paths:
  /accesstoken/get:
    post:
      description: |-
        This is an authentication endpoint for merchant use.
        The access token endpoint is used to get the JWT (JSON Web Token) that
        must be passed in every API request in the `Authorization` header.
        The access token is a base64-encoded string value that must be
        acquired first before making any Vipps MobilePay API calls.
        The access token is valid for 1 hour in the test environment
        and 24 hours in the production environment.
        See: https://developer.vippsmobilepay.com/docs/APIs/access-token-api/
      operationId: fetchAuthorizationTokenUsingPost
      parameters:
      - description: |-
          The `client_id` is available on portal.vipps.no, under the *Developer* section.
          Think of it as the "username".
        example: fb492b5e-7907-4d83-ba20-c7fb60ca35de
        explode: false
        in: header
        name: client_id
        required: true
        schema:
          format: guid
          type: string
        style: simple
      - description: |-
          The `client_secret` is available on portal.vipps.no, under the *Developer* section.
          Think of it as the "password".
          Keep it secret.
          We will never ask for it, and we don't need it for anything.
        example: Y8Kteew6GE2ZmeycEt6egg==
        explode: false
        in: header
        name: client_secret
        required: true
        schema:
          type: string
        style: simple
      - description: "The subscription key for a sales unit. See [API keys](/docs/knowledge-base/api-keys/)."
        explode: false
        in: header
        name: Ocp-Apim-Subscription-Key
        required: true
        schema:
          example: da7d5b0e18a84aeda961c0c31b75c2a9
          type: string
        style: simple
      - description: |-
          The merchant serial number (MSN) for the sales unit. The Merchant-Serial-Number header
          can be used with all API keys, and can speed up any trouble-shooting of API
          problems quite a bit.
        explode: false
        in: header
        name: Merchant-Serial-Number
        required: false
        schema:
          example: "123456"
          maxLength: 6
          minLength: 4
          pattern: "^[0-9]{4,6}$"
          type: string
        style: simple
      - description: |-
          The name of the ecommerce solution.
          One word in lowercase letters is good.
          See [http-headers](/docs/knowledge-base/http-headers).
        explode: false
        in: header
        name: Vipps-System-Name
        required: false
        schema:
          example: WooCommerce
          maxLength: 30
          type: string
        style: simple
      - description: |-
          The version number of the ecommerce solution.
          See [http-headers](/docs/knowledge-base/http-headers).
        explode: false
        in: header
        name: Vipps-System-Version
        required: false
        schema:
          example: 5.4.0
          maxLength: 30
          type: string
        style: simple
      - description: |-
          The name of the ecommerce plugin (if applicable).
          One word in lowercase letters is good.
          See [http-headers](/docs/knowledge-base/http-headers).
        explode: false
        in: header
        name: Vipps-System-Plugin-Name
        required: false
        schema:
          example: woocommerce-payment
          maxLength: 30
          type: string
        style: simple
      - description: |-
          The version number of the ecommerce plugin (if applicable).
          See [http-headers](/docs/knowledge-base/http-headers).
        explode: false
        in: header
        name: Vipps-System-Plugin-Version
        required: false
        schema:
          example: 1.4.1
          maxLength: 30
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/AuthorizationTokenResponse'
          description: OK
        "400":
          description: Bad request
        "401":
          description: Unauthorized
        "500":
          description: Server error.
      summary: Request an access token (JWT bearer token)
      tags:
      - Authorization Service
  /miami/v1/token:
    post:
      description: |-
        This is a token endpoint for partners in certain roles.
        This is based on OAuth (Open Authorization) and requires only `client_id` and `client_secret`.
        The `Ocp-Apim-Subscription-Key` is not used.
        *Important:* This endpoint will be renamed to `/authentication/v1/token` later,
        when the internal technical dependencies are resolved.
      operationId: fetchToken
      parameters:
      - description: The string 'client_id:client_secret' encoded to Base64 with Basic
          in front
        example: Basic OTY1OGY0ZTItMjZhOC00MzQzLTliNzUtNjdhZTkzODAyMzJkOlk4S3RlZXc2R0UyWm1leWNFdDZlZ2c9PQ==
        explode: false
        in: header
        name: Authorization
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/x-www-form-urlencoded; charset=utf-8:
            schema:
              $ref: '#/components/schemas/fetchToken_request'
        required: true
      responses:
        "200":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/TokenResponse'
          description: OK
        "400":
          description: Bad request
        "401":
          description: Unauthorized
        "500":
          description: Server error.
      summary: Request an access token.
      tags:
      - Token endpoint
components:
  parameters:
    Merchant-Serial-Number:
      description: |-
        The merchant serial number (MSN) for the sales unit. The Merchant-Serial-Number header
        can be used with all API keys, and can speed up any trouble-shooting of API
        problems quite a bit.
      explode: false
      in: header
      name: Merchant-Serial-Number
      required: false
      schema:
        example: "123456"
        maxLength: 6
        minLength: 4
        pattern: "^[0-9]{4,6}$"
        type: string
      style: simple
    Ocp-Apim-Subscription-Key:
      description: "The subscription key for a sales unit. See [API keys](/docs/knowledge-base/api-keys/)."
      explode: false
      in: header
      name: Ocp-Apim-Subscription-Key
      required: true
      schema:
        example: da7d5b0e18a84aeda961c0c31b75c2a9
        type: string
      style: simple
    Vipps-System-Name:
      description: |-
        The name of the ecommerce solution.
        One word in lowercase letters is good.
        See [http-headers](/docs/knowledge-base/http-headers).
      explode: false
      in: header
      name: Vipps-System-Name
      required: false
      schema:
        example: WooCommerce
        maxLength: 30
        type: string
      style: simple
    Vipps-System-Version:
      description: |-
        The version number of the ecommerce solution.
        See [http-headers](/docs/knowledge-base/http-headers).
      explode: false
      in: header
      name: Vipps-System-Version
      required: false
      schema:
        example: 5.4.0
        maxLength: 30
        type: string
      style: simple
    Vipps-System-Plugin-Name:
      description: |-
        The name of the ecommerce plugin (if applicable).
        One word in lowercase letters is good.
        See [http-headers](/docs/knowledge-base/http-headers).
      explode: false
      in: header
      name: Vipps-System-Plugin-Name
      required: false
      schema:
        example: woocommerce-payment
        maxLength: 30
        type: string
      style: simple
    Vipps-System-Plugin-Version:
      description: |-
        The version number of the ecommerce plugin (if applicable).
        See [http-headers](/docs/knowledge-base/http-headers).
      explode: false
      in: header
      name: Vipps-System-Plugin-Version
      required: false
      schema:
        example: 1.4.1
        maxLength: 30
        type: string
      style: simple
  schemas:
    TokenResponse:
      description: |-
        This _new_ accesstoken endpoint is used to get the JWT (JSON Web Token) that
        must be passed in every API request in the `Authorization` header.
        The access token is a base64-encoded string value that must be
        acquired first before making any Vipps MobilePay API calls.
        The access token is valid for 15 minutes both in the test environment
        and in the production environment.
        See: https://developer.vippsmobilepay.com/docs/APIs/access-token-api/
      example:
        access_token: !!binary |-
          ZXlKMGVYQWlPaUpLVjFRaUxDSmhiR2NpT2lKU1V6STFOaSA8dHJ1bmNhdGVkPg==
        token_type: Bearer
        expires_in: "900"
      properties:
        token_type:
          description: |-
            The type for the access token.
            This will always be `Bearer`.
          example: Bearer
          type: string
        expires_in:
          description: Token expiry time in seconds. The token is currently valid
            for 15 minutes.
          example: "900"
          type: string
        access_token:
          description: |-
            The access token itself.
            It is a base64-encoded string, typically 1000+ characters.
          example: !!binary |-
            ZXlKMGVYQWlPaUpLVjFRaUxDSmhiR2NpT2lKU1V6STFOaSA8dHJ1bmNhdGVkPg==
          format: byte
          type: string
      required:
      - access_token
      - expires_in
      - token_type
      type: object
    AuthorizationTokenResponse:
      example:
        access_token: eyJ0eXAiOiJKV1QiLCJhbGciOiJSUzI1Ni <truncated>
        resource: 00000002-0000-0000-c000-000000000000
        not_before: "1547819508"
        expires_on: "1547823408"
        ext_expires_in: "3600"
        token_type: Bearer
        expires_in: "3600"
      properties:
        token_type:
          description: |-
            The type for the access token.
            This will always be `Bearer`.
          example: Bearer
          type: string
        expires_in:
          description: |-
            Token expiry time in seconds.
            The access token is valid for 1 hour in the test environment
            and 24 hours in the production environment.
          example: "3600"
          type: string
        ext_expires_in:
          description: Extra time added to expiry time. Currently disabled.
          example: "3600"
          type: string
        expires_on:
          description: Token expiry time in epoch time format.
          example: "1547823408"
          type: string
        not_before:
          description: Token creation time in epoch time format.
          example: "1547819508"
          type: string
        resource:
          description: |-
            A common resource object.
            Not used in token validation.
            This can be disregarded.
          example: 00000002-0000-0000-c000-000000000000
          type: string
        access_token:
          description: |-
            The access token itself.
            It is a base64-encoded string, typically 1000+ characters.
            It can be decoded on https://jwt.io, and using standard libraries.
            See the documentation for details.
          example: eyJ0eXAiOiJKV1QiLCJhbGciOiJSUzI1Ni <truncated>
          type: string
      required:
      - access_token
      - expires_in
      - expires_on
      - ext_expires_in
      - not_before
      - resource
      - token_type
      type: object
    fetchToken_request:
      properties:
        grant_type:
          enum:
          - client_credentials
          example: client_credentials
          type: string
      type: object

