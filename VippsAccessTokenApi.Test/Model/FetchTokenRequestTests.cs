/*
 * Access token
 *
 * The Access token API is for requesting an access token, which is a JWT (JSON Web Token).  There are two endpoints:  1. `POST:/accesstoken/get`: Used by most APIs, and has been in use for several years. 2. `POST:/miami/v1/token`: Used by some new APIs and roles, from 2023.  For `POST:/accesstoken/get`: The access token must be provided in all API requests, together with the subscription key. The access token is valid for 1 hour in the test environment and 24 hours in the production environment.  For `POST:/miami/v1/token`: The access token must be provided in all API requests (no subscription key needed). The access token is valid for 15 minutes in both the test environment and the production environment.  See the [API Guide](/docs/APIs/access-token-api) for more details.
 *
 * The version of the OpenAPI document: 2.0.0
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using Xunit;

using System;
using System.Linq;
using System.IO;
using System.Collections.Generic;
using VippsAccessTokenApi.Model;
using VippsAccessTokenApi.Client;
using System.Reflection;
using Newtonsoft.Json;

namespace VippsAccessTokenApi.Test.Model
{
    /// <summary>
    ///  Class for testing FetchTokenRequest
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by OpenAPI Generator (https://openapi-generator.tech).
    /// Please update the test case below to test the model.
    /// </remarks>
    public class FetchTokenRequestTests : IDisposable
    {
        // TODO uncomment below to declare an instance variable for FetchTokenRequest
        //private FetchTokenRequest instance;

        public FetchTokenRequestTests()
        {
            // TODO uncomment below to create an instance of FetchTokenRequest
            //instance = new FetchTokenRequest();
        }

        public void Dispose()
        {
            // Cleanup when everything is done.
        }

        /// <summary>
        /// Test an instance of FetchTokenRequest
        /// </summary>
        [Fact]
        public void FetchTokenRequestInstanceTest()
        {
            // TODO uncomment below to test "IsType" FetchTokenRequest
            //Assert.IsType<FetchTokenRequest>(instance);
        }

        /// <summary>
        /// Test the property 'GrantType'
        /// </summary>
        [Fact]
        public void GrantTypeTest()
        {
            // TODO unit test for the property 'GrantType'
        }
    }
}
